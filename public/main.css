/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.home__projects, .footer__wrapper {
  padding: 0 180px;
}

@media (min-width: 1921px) {
  .home__projects, .footer__wrapper {
    padding: 0 270px;
    max-width: 1900px;
    margin: 0 auto;
  }
}
@media (max-width: 1023px) {
  .home__projects, .footer__wrapper {
    padding: 0 100px;
  }
}
@media (max-width: 767px) {
  .home__projects, .footer__wrapper {
    padding: 0 30px;
  }
}
.project-title__content h3 {
  font-family: "Montserrat";
  font-size: 1em;
  font-weight: bold;
}

.featured__title, h2, .footer__headline, .global-menu__item {
  font-family: "Montserrat";
  font-size: 2em;
  font-weight: bold;
}

h1 {
  font-family: "Montserrat";
  font-size: 2.5em;
  font-weight: bold;
}

body {
  font-size: 1.5rem;
  font-family: "Montserrat";
}

.contact__button {
  display: block;
  padding: 20px 35px;
  background-color: #fff;
  border: solid 2px #fff;
  border-radius: 50px;
  width: max-content;
  color: #171619;
  text-decoration: none;
  font-size: 0.75em;
  line-height: 0;
}

.project__button {
  display: block;
  padding: 20px 35px;
  background-color: transparent;
  border: solid 2px #fff;
  border-radius: 50px;
  width: max-content;
  color: #fff;
  text-decoration: none;
  font-size: 0.75em;
  line-height: 0;
}

.s-button {
  --color: #171619;
  --color-hover: var(--color);
  --background-hover: var(--background);
  --hover-front: #171619;
  --hover-back: #171619;
  background-color: #fff;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  -webkit-appearance: none;
  -webkit-tap-highlight-color: transparent;
  -webkit-mask-image: -webkit-radial-gradient(white, black);
  color: var(--c, var(--color));
  transition: color 0.2s linear var(--c-d, 0.2s), background 0.3s linear var(--b-d, 0.2s);
}
.s-button:before, .s-button:after {
  content: "";
  position: absolute;
  background: var(--pb, var(--hover-back));
  top: 0;
  left: 0;
  right: 0;
  height: 200%;
  border-radius: var(--br, 40%);
  transform: translateY(var(--y, 50%));
  transition: transform var(--d, 0.4s) ease-in var(--d-d, 0s), border-radius 0.5s ease var(--br-d, 0.08s);
}
.s-button:after {
  --pb: var(--hover-front);
  --d: .44s;
}
.s-button:hover {
  color: #fff;
  transition: color 0.4s;
}
.s-button div {
  z-index: 1;
  position: relative;
  display: flex;
}
.s-button div span {
  display: block;
  backface-visibility: hidden;
  transform: translateZ(0);
  animation: var(--name, none) 0.7s linear forwards 0.18s;
}
.s-button.in {
  --name: move;
}
.s-button.in:not(.out) {
  --c: var(--color-hover);
  --b: var(--background-hover);
}
.s-button.in:not(.out):before, .s-button.in:not(.out):after {
  --y: 0;
  --br: 5%;
}
.s-button.in:not(.out):after {
  --br: 10%;
  --d-d: .02s;
}
.s-button.in.out {
  --name: move-out;
}
.s-button.in.out:before {
  --d-d: .06s;
}

.o-button {
  --color: #fff;
  --color-hover: var(--color);
  --background-hover: var(--background);
  --hover-front: #fff;
  --hover-back: #fff;
  background-color: #171619;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  -webkit-appearance: none;
  -webkit-tap-highlight-color: transparent;
  -webkit-mask-image: -webkit-radial-gradient(white, black);
  color: var(--c, var(--color));
  transition: color 0.2s linear var(--c-d, 0.2s), background 0.3s linear var(--b-d, 0.2s);
}
.o-button:before, .o-button:after {
  content: "";
  position: absolute;
  background: var(--pb, var(--hover-back));
  top: 0;
  left: 0;
  right: 0;
  height: 200%;
  border-radius: var(--br, 40%);
  transform: translateY(var(--y, 50%));
  transition: transform var(--d, 0.4s) ease-in var(--d-d, 0s), border-radius 0.5s ease var(--br-d, 0.08s);
}
.o-button:after {
  --pb: var(--hover-front);
  --d: .44s;
}
.o-button:hover {
  color: #171619;
  transition: color 0.4s;
}
.o-button div {
  z-index: 1;
  position: relative;
  display: flex;
}
.o-button div span {
  display: block;
  backface-visibility: hidden;
  transform: translateZ(0);
  animation: var(--name, none) 0.7s linear forwards 0.18s;
}
.o-button.in {
  --name: move;
}
.o-button.in:not(.out) {
  --c: var(--color-hover);
  --b: var(--background-hover);
}
.o-button.in:not(.out):before, .o-button.in:not(.out):after {
  --y: 0;
  --br: 5%;
}
.o-button.in:not(.out):after {
  --br: 10%;
  --d-d: .02s;
}
.o-button.in.out {
  --name: move-out;
}
.o-button.in.out:before {
  --d-d: .06s;
}

@keyframes move {
  30%, 36% {
    transform: translateY(calc(-6px * var(--move))) translateZ(0) rotate(calc(-13deg * var(--rotate) * var(--part)));
  }
  50% {
    transform: translateY(calc(3px * var(--move))) translateZ(0) rotate(calc(6deg * var(--rotate) * var(--part)));
  }
  70% {
    transform: translateY(calc(-2px * var(--move))) translateZ(0) rotate(calc(-3deg * var(--rotate) * var(--part)));
  }
}
@keyframes move-out {
  30%, 36% {
    transform: translateY(calc(6px * var(--move))) translateZ(0) rotate(calc(13deg * var(--rotate) * var(--part)));
  }
  50% {
    transform: translateY(calc(-3px * var(--move))) translateZ(0) rotate(calc(-6deg * var(--rotate) * var(--part)));
  }
  70% {
    transform: translateY(calc(2px * var(--move))) translateZ(0) rotate(calc(3deg * var(--rotate) * var(--part)));
  }
}
nav {
  padding: 50px 0px 20px 0px;
  position: absolute;
  width: 100%;
}

.navigation__wrapper {
  display: flex;
  justify-content: space-between;
  padding: 0 100px;
}
.navigation__wrapper a {
  color: #fff;
  text-decoration: none;
}

.navigation__title {
  font-weight: 500;
}

.navigation__menu {
  font-size: 0.8em;
}

.hamburger {
  width: 45px;
  height: 45px;
  position: fixed;
  right: 0.5rem;
  margin-right: 20px;
  -webkit-transform: rotate(0deg);
  -moz-transform: rotate(0deg);
  -o-transform: rotate(0deg);
  transform: rotate(0deg);
  -webkit-transition: 0.5s ease-in-out;
  -moz-transition: 0.5s ease-in-out;
  -o-transition: 0.5s ease-in-out;
  transition: 0.5s ease-in-out;
  cursor: pointer;
  z-index: 99;
}
.hamburger span {
  display: block;
  position: absolute;
  height: 4px;
  width: 100%;
  background: #fff;
  border-radius: 9px;
  opacity: 1;
  left: 0;
  -webkit-transform: rotate(0deg);
  -moz-transform: rotate(0deg);
  -o-transform: rotate(0deg);
  transform: rotate(0deg);
  -webkit-transition: 0.25s ease-in-out;
  -moz-transition: 0.25s ease-in-out;
  -o-transition: 0.25s ease-in-out;
  transition: 0.25s ease-in-out;
}
.hamburger span:first-child {
  top: 0px;
}
.hamburger span:last-child {
  top: 15px;
}
.hamburger.is-opened-navi span {
  top: 10px;
}
.hamburger.is-opened-navi span:first-child {
  -webkit-transform: rotate(45deg);
  -moz-transform: rotate(45deg);
  -o-transform: rotate(45deg);
  transform: rotate(45deg);
}
.hamburger.is-opened-navi span:last-child {
  -webkit-transform: rotate(-45deg);
  -moz-transform: rotate(-45deg);
  -o-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

/* Color schemes */
.menu {
  --path-fill-1: #171619;
  --path-fill-2: #ffffff;
  --path-fill-3: #171619;
  --color-menu-hover: #cccccc;
}

a {
  text-decoration: none;
  color: #fff;
  outline: none;
}

.global-menu {
  width: 100vw;
  height: 90vh;
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  z-index: 100;
}

.global-menu__item {
  color: #fff;
  opacity: 0;
  transform: translateY(-100%);
  pointer-events: none;
  display: block;
  margin: 0.25em 0;
  transition: transform 0.3s, opacity 0.3s;
  transition-timing-function: ease-in;
}

.global-menu__item:hover {
  color: var(--color-menu-hover);
}

.global-menu__item.is-opened {
  opacity: 1;
  transform: translateY(0) rotate(0);
  pointer-events: auto;
  transition-timing-function: ease;
}

.global-menu__item:nth-of-type(1) {
  transition-delay: 0s;
}

.global-menu__item.is-opened:nth-of-type(1) {
  transition-delay: 0.85s;
}

.global-menu__item:nth-of-type(2) {
  transition-delay: 0.05s;
}

.global-menu__item.is-opened:nth-of-type(2) {
  transition-delay: 0.8s;
}

.global-menu__item:nth-of-type(3) {
  transition-delay: 0.1s;
}

.global-menu__item.is-opened:nth-of-type(3) {
  transition-delay: 0.75s;
}

.global-menu__item:nth-of-type(4) {
  transition-delay: 0.15s;
}

.global-menu__item.is-opened:nth-of-type(4) {
  transition-delay: 0.7s;
}

.shape-overlays {
  z-index: 98;
  width: 100vw;
  height: 100vh;
  pointer-events: none;
  position: fixed;
  top: 0;
  left: 0;
}

.shape-overlays.is-opened {
  pointer-events: auto;
}

.shape-overlays__path:nth-of-type(1) {
  fill: var(--path-fill-1);
}

.shape-overlays__path:nth-of-type(2) {
  fill: var(--path-fill-2);
}

.shape-overlays__path:nth-of-type(3) {
  fill: var(--path-fill-3);
}

.shape-overlays__path:nth-of-type(4) {
  fill: var(--path-fill-4);
}

footer {
  color: #000;
  background-color: #fff;
  padding-bottom: 80px;
}

.footer__top {
  background-color: #171619;
  height: 80px;
  border-radius: 0px 0px 80px 80px;
}

.footer__wrapper {
  padding-top: 100px;
}

.footer__bottom {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-end;
}

.footer__headline {
  line-height: 4rem;
}

.footer__divider {
  width: 300px;
  display: inline-block;
  border: solid 1px;
}

.footer__socials {
  display: flex;
  gap: 50px;
  justify-content: flex-end;
}

.footer__email {
  padding-top: 100px;
}
.footer__email a {
  color: #000;
  text-decoration: none;
  font-weight: bold;
}

.footer__location {
  color: #909090;
  font-size: 0.8em;
  padding: 20px 0;
}

.footer__policy a {
  font-size: 0.8em;
  color: #000;
  text-decoration: none;
}

@font-face {
  font-family: "Montserrat";
  src: url(db6854316b6e82879aa9..woff2) format("woff2"), url(ad6d553616c716e36bbc..woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(80941f1ad2a866340ce0..woff2) format("woff2"), url(5d15323c637cd2af6477..woff) format("woff");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(a73452934648129ecbd4..woff2) format("woff2"), url(e3ec793c56108161ac2c..woff) format("woff");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(ecfa764eb0b93b220c63..woff2) format("woff2"), url(87be09dc15290961c6f0..woff) format("woff");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}
body {
  background-color: #171619;
  color: #fff;
}

.home__landing {
  display: flex;
  justify-content: space-between;
  height: 100vh;
  align-items: center;
}

.home__projects {
  padding-top: 100px;
  overflow: hidden;
}

.home__text {
  padding-left: 180px;
  position: absolute;
}

.home__image {
  width: 100vw;
  height: 100vh;
  background: linear-gradient(to right, rgb(23, 22, 25) 50%, rgba(255, 255, 255, 0) 100%), url(https://images.unsplash.com/photo-1460904577954-8fadb262612c?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2290&q=80) no-repeat right center fixed;
  background-size: cover;
}

.home__title {
  margin-bottom: 20px;
}

.tagline {
  margin-bottom: 80px;
}

.project__button {
  margin: auto;
}

.projects__wrapper {
  --wrapper-section-height: 100vh;
  height: calc(var(--wrapper-section-height) * var(--items));
}

.projects__inner {
  display: block;
  min-height: 100vh;
  width: 100%;
  margin: 50px 0px;
}

.project__reveal__item {
  align-content: center;
  display: grid;
  grid-auto-flow: column;
  grid-gap: 2rem;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
  margin: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.project__item-media {
  display: block;
  max-height: 80vh;
  margin-top: 10vh;
  overflow: hidden;
  top: 0;
  width: 100%;
}

.project-title__content {
  align-content: center;
  display: grid;
  grid-column: 1/span 1;
  max-height: 100vh;
  will-change: opacity, transform;
  text-align: right;
  margin: auto;
  gap: 10px;
}
.project-title__content span:first-of-type {
  font-size: 0.8em;
}
.project-title__content h3 {
  font-size: 1.25em;
}
.project-title__content span:last-of-type {
  font-size: 0.6em;
  color: #ccc;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/